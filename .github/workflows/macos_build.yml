name: MacOS Build

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - .github/**
      - "!.github/workflows/macos_build.yml"
      - "**.md"
      - "docs/**"
  push:
    branches:
      - main
    paths-ignore:
      - .github/**
      - "!.github/workflows/macos_build.yml"
      - "**.md"
      - "docs/**"

env:
  BETTER_MEDIA_INFO_VERSION: 0.5.0
  MEDIA_INFO_LIB_VERSION: v24.12

jobs:
  build_package:
    strategy:
      matrix:
        include:
          - image: macos-13
            os: macos
            arch: x86_64
          - image: macos-14
            os: macos
            arch: arm64

    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.image }}

    steps:
    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Install brew packages
      run: |
        brew install autoconf automake libtool pkg-config zlib wxwidgets

    - name: Build zlib
      run: |
        cd ..
        curl -o zlib.tar.gz https://www.zlib.net/zlib-1.3.1.tar.gz
        tar -xzvf zlib.tar.gz
        mv zlib-1.3.1 zlib
        rm zlib.tar.gz
        cd zlib
        ./configure --static
        make -j 4

    - name: Build ZenLib
      run: |
        cd ..
        git clone https://github.com/MediaArea/ZenLib.git
        cd ZenLib/Project/GNU/Library
        ./autogen.sh
        ./configure --enable-static
        make -j 4

    - name: Build MediaInfoLib
      run: |
        cd ..
        git clone -b ${{ env.MEDIA_INFO_LIB_VERSION }} --depth 1 https://github.com/MediaArea/MediaInfoLib.git
        cd MediaInfoLib/Project/GNU/Library
        ./autogen.sh
        ./configure --enable-static
        make -j 4

    - name: Build BetterMediaInfo
      run: |
        pnpm install
        cd src-tauri
        cargo test -r
        cd ..
        pnpm tauri build

    - name: Upload the Artifact
      uses: actions/upload-artifact@v4
      with:
        name: BetterMediaInfo-${{ matrix.os }}-${{ matrix.arch }}-${{ env.BETTER_MEDIA_INFO_VERSION }}
        path: |
          src-tauri/target/release/bundle/dmg/*.dmg
