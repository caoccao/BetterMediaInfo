#![allow(non_camel_case_types, non_upper_case_globals, nonstandard_style, dead_code, unused_imports)]
/* automatically generated by rust-bindgen 0.69.4 */

pub type MediaInfo_Char = ::std::os::raw::c_char;
pub type MediaInfo_int8u = ::std::os::raw::c_uchar;
pub type MediaInfo_int64u = ::std::os::raw::c_ulonglong;
pub const MediaInfo_stream_t_MediaInfo_Stream_General: MediaInfo_stream_t = 0;
pub const MediaInfo_stream_t_MediaInfo_Stream_Video: MediaInfo_stream_t = 1;
pub const MediaInfo_stream_t_MediaInfo_Stream_Audio: MediaInfo_stream_t = 2;
pub const MediaInfo_stream_t_MediaInfo_Stream_Text: MediaInfo_stream_t = 3;
pub const MediaInfo_stream_t_MediaInfo_Stream_Other: MediaInfo_stream_t = 4;
pub const MediaInfo_stream_t_MediaInfo_Stream_Image: MediaInfo_stream_t = 5;
pub const MediaInfo_stream_t_MediaInfo_Stream_Menu: MediaInfo_stream_t = 6;
pub const MediaInfo_stream_t_MediaInfo_Stream_Max: MediaInfo_stream_t = 7;
#[doc = " @brief Kinds of Stream"]
pub type MediaInfo_stream_t = ::std::os::raw::c_int;
#[doc = " @brief Kinds of Stream"]
pub use self::MediaInfo_stream_t as MediaInfo_stream_C;
pub const MediaInfo_info_t_MediaInfo_Info_Name: MediaInfo_info_t = 0;
pub const MediaInfo_info_t_MediaInfo_Info_Text: MediaInfo_info_t = 1;
pub const MediaInfo_info_t_MediaInfo_Info_Measure: MediaInfo_info_t = 2;
pub const MediaInfo_info_t_MediaInfo_Info_Options: MediaInfo_info_t = 3;
pub const MediaInfo_info_t_MediaInfo_Info_Name_Text: MediaInfo_info_t = 4;
pub const MediaInfo_info_t_MediaInfo_Info_Measure_Text: MediaInfo_info_t = 5;
pub const MediaInfo_info_t_MediaInfo_Info_Info: MediaInfo_info_t = 6;
pub const MediaInfo_info_t_MediaInfo_Info_HowTo: MediaInfo_info_t = 7;
pub const MediaInfo_info_t_MediaInfo_Info_Max: MediaInfo_info_t = 8;
#[doc = " @brief Kinds of Info"]
pub type MediaInfo_info_t = ::std::os::raw::c_int;
#[doc = " @brief Kinds of Info"]
pub use self::MediaInfo_info_t as MediaInfo_info_C;
pub const MediaInfo_fileoptions_t_MediaInfo_FileOption_Nothing: MediaInfo_fileoptions_t = 0;
pub const MediaInfo_fileoptions_t_MediaInfo_FileOption_NoRecursive: MediaInfo_fileoptions_t = 1;
pub const MediaInfo_fileoptions_t_MediaInfo_FileOption_CloseAll: MediaInfo_fileoptions_t = 2;
pub const MediaInfo_fileoptions_t_MediaInfo_FileOption_Max: MediaInfo_fileoptions_t = 4;
#[doc = " @brief File opening options"]
pub type MediaInfo_fileoptions_t = ::std::os::raw::c_int;
#[doc = " @brief File opening options"]
pub use self::MediaInfo_fileoptions_t as MediaInfo_fileoptions_C;
pub type MEDIAINFO_New = ::std::option::Option<unsafe extern "C" fn() -> *mut ::std::os::raw::c_void>;
pub type MEDIAINFOLIST_New = ::std::option::Option<unsafe extern "C" fn() -> *mut ::std::os::raw::c_void>;
pub type MEDIAINFO_Delete = ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>;
pub type MEDIAINFOLIST_Delete = ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>;
pub type MEDIAINFO_Open =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, arg2: *const MediaInfo_Char) -> usize>;
pub type MEDIAINFOLIST_Open = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    arg2: *const MediaInfo_Char,
    arg3: MediaInfo_fileoptions_C,
  ) -> usize,
>;
pub type MEDIAINFO_Open_Buffer_Init = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    File_Size: MediaInfo_int64u,
    File_Offset: MediaInfo_int64u,
  ) -> usize,
>;
pub type MEDIAINFO_Open_Buffer_Continue = ::std::option::Option<
  unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, Buffer: *mut MediaInfo_int8u, Buffer_Size: usize) -> usize,
>;
pub type MEDIAINFO_Open_Buffer_Continue_GoTo_Get =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> MediaInfo_int64u>;
pub type MEDIAINFO_Open_Buffer_Finalize =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
pub type MEDIAINFO_Open_NextPacket =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
pub type MEDIAINFO_Close = ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>;
pub type MEDIAINFOLIST_Close =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, arg2: usize)>;
pub type MEDIAINFO_Inform = ::std::option::Option<
  unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, Reserved: usize) -> *const MediaInfo_Char,
>;
pub type MEDIAINFOLIST_Inform = ::std::option::Option<
  unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, arg2: usize, Reserved: usize) -> *const MediaInfo_Char,
>;
pub type MEDIAINFO_GetI = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    StreamKind: MediaInfo_stream_C,
    StreamNumber: usize,
    Parameter: usize,
    KindOfInfo: MediaInfo_info_C,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFOLIST_GetI = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    arg2: usize,
    StreamKind: MediaInfo_stream_C,
    StreamNumber: usize,
    Parameter: usize,
    KindOfInfo: MediaInfo_info_C,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFO_Get = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    StreamKind: MediaInfo_stream_C,
    StreamNumber: usize,
    Parameter: *const MediaInfo_Char,
    KindOfInfo: MediaInfo_info_C,
    KindOfSearch: MediaInfo_info_C,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFOLIST_Get = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    arg2: usize,
    StreamKind: MediaInfo_stream_C,
    StreamNumber: usize,
    Parameter: *const MediaInfo_Char,
    KindOfInfo: MediaInfo_info_C,
    KindOfSearch: MediaInfo_info_C,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFO_Output_Buffer_Get = ::std::option::Option<
  unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, Parameter: *const MediaInfo_Char) -> usize,
>;
pub type MEDIAINFO_Output_Buffer_GetI =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, Pos: usize) -> usize>;
pub type MEDIAINFO_Option = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    Parameter: *const MediaInfo_Char,
    Value: *const MediaInfo_Char,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFOLIST_Option = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    Parameter: *const MediaInfo_Char,
    Value: *const MediaInfo_Char,
  ) -> *const MediaInfo_Char,
>;
pub type MEDIAINFO_State_Get = ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
pub type MEDIAINFOLIST_State_Get =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
pub type MEDIAINFO_Count_Get = ::std::option::Option<
  unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void, StreamKind: MediaInfo_stream_C, StreamNumber: usize) -> usize,
>;
pub type MEDIAINFOLIST_Count_Get = ::std::option::Option<
  unsafe extern "C" fn(
    arg1: *mut ::std::os::raw::c_void,
    arg2: usize,
    StreamKind: MediaInfo_stream_C,
    StreamNumber: usize,
  ) -> usize,
>;
pub type MEDIAINFO_Count_Get_Files =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
pub type MEDIAINFOLIST_Count_Get_Files =
  ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void) -> usize>;
